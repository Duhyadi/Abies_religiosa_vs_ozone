x<- c("DC01_15","DC02_15","DC03_15","DC04_15","DC05_15",
"DS01_15","DS02_15","DS04_15",
"HC01_15","HC02_15","HC03_15","HC04_15","HC05_15",
"HS01_15", "HS02_15", "HS05_15",
"HC01_17", "DC04_17"
)
for(i in x){
sample=i
i<-read.delim("../../Counts/Genes_sw10/i_sw10L50.genesorder.txt", header= FALSE)
}
for(i in x){
sample=i
$i<-read.delim("../../Counts/Genes_sw10/$i_sw10L50.genesorder.txt", header= FALSE)
}
for(i in x){
sample=i
$i<-read.delim("../../Counts/Genes_sw10/${i}_sw10L50.genesorder.txt", header= FALSE)
}
## Datos para expresion diferencial (mapeo BWA)
## 15 Oct 2018
## Veronica Reyes
x
for(i in x){
sample=i
$i<-read.delim("../../Counts/Genes_sw10/${i}_sw10L50.genesorder.txt", header= FALSE)
}
sample=i
$i<-read.delim("../../Counts/Genes_sw10/${i}_sw10L50.genesorder.txt", header= FALSE)
$i<-read.delim("../../Counts/Genes_sw10/${i}_sw10L50.genesorder.txt", header= FALSE)
${i}<-read.delim("../../Counts/Genes_sw10/${i}_sw10L50.genesorder.txt", header= FALSE)
for(i in x){
sample=i
${i}<-read.delim("../../Counts/Genes_sw10/${i}_sw10L50.genesorder.txt", header= FALSE)
}
# Load files
DC01_15<-read.delim("../../metadata/genes_order/DC01_15_sw10L50.genesorder.txt", header= FALSE)
DC02_15<-read.delim("../../metadata/genes_order/DC02_15_sw10L50.genesorder.txt", header= FALSE)
DC03_15<-read.delim("../../metadata/genes_order/DC03_15_sw10L50.genesorder.txt", header= FALSE)
DC04_15<-read.delim("../../metadata/genes_order/DC04_15_sw10L50.genesorder.txt", header= FALSE)
DC05_15<-read.delim("../../metadata/genes_order/DC05_15_sw10L50.genesorder.txt", header= FALSE)
DS01_15<-read.delim("../../metadata/genes_order/DS01_15_sw10L50.genesorder.txt", header= FALSE)
DS02_15<-read.delim("../../metadata/genes_order/DS02_15_sw10L50.genesorder.txt", header= FALSE)
DS04_15<-read.delim("../../metadata/genes_order/DS04_15_sw10L50.genesorder.txt", header= FALSE)
HC01_15<-read.delim("../../metadata/genes_order/SC01_15_sw10L50.genesorder.txt", header= FALSE)
HC02_15<-read.delim("../../metadata/genes_order/SC02_15_sw10L50.genesorder.txt", header= FALSE)
HC03_15<-read.delim("../../metadata/genes_order/SC03_15_sw10L50.genesorder.txt", header= FALSE)
HC04_15<-read.delim("../../metadata/genes_order/SC04_15_sw10L50.genesorder.txt", header= FALSE)
HC05_15<-read.delim("../../metadata/genes_order/SC05_15_sw10L50.genesorder.txt", header= FALSE)
HS01_15<-read.delim("../../metadata/genes_order/SS01_15_sw10L50.genesorder.txt", header= FALSE)
HS02_15<-read.delim("../../metadata/genes_order/SS02_15_sw10L50.genesorder.txt", header= FALSE)
HS05_15<-read.delim("../../metadata/genes_order/SS05_15_sw10L50.genesorder.txt", header= FALSE)
HC01_17<-read.delim("../../metadata/genes_order/SC01_17_sw10L50.genesorder.txt", header= FALSE)
DC04_17<-read.delim("../../metadata/genes_order/DC04_17_sw10L50.genesorder.txt", header= FALSE)
head(DC04_17)
# Change columns name´s
colnames(DC01_15)<- c("number_reads", "name_gen")
colnames(DC02_15)<- c("number_reads", "name_gen")
colnames(DC03_15)<- c("number_reads", "name_gen")
colnames(DC04_15)<- c("number_reads", "name_gen")
colnames(DC05_15)<- c("number_reads", "name_gen")
colnames(DS01_15)<- c("number_reads", "name_gen")
colnames(DS02_15)<- c("number_reads", "name_gen")
colnames(DS04_15)<- c("number_reads", "name_gen")
colnames(HC01_15)<- c("number_reads", "name_gen")
colnames(HC02_15)<- c("number_reads", "name_gen")
colnames(HC03_15)<- c("number_reads", "name_gen")
colnames(HC04_15)<- c("number_reads", "name_gen")
colnames(HC05_15)<- c("number_reads", "name_gen")
colnames(HS01_15)<- c("number_reads", "name_gen")
colnames(HS02_15)<- c("number_reads", "name_gen")
colnames(HS05_15)<- c("number_reads", "name_gen")
colnames(HC01_17)<- c("number_reads", "name_gen")
colnames(DC04_17)<- c("number_reads", "name_gen")
head(DC04_17)
all<- data.frame(DC01_15$name_gen, DC01_15$number_reads)
head(all)
all$DC_2 <- DC02_15$number_reads[match(all$DC01_15.name_gen, DC02_15$name_gen)]
all$DC_3 <- DC03_15$number_reads[match(all$DC01_15.name_gen, DC03_15$name_gen)]
all$DC_4 <- DC04_15$number_reads[match(all$DC01_15.name_gen, DC04_15$name_gen)]
all$DC_5 <- DC05_15$number_reads[match(all$DC01_15.name_gen, DC05_15$name_gen)]
all$DS_1 <- DS01_15$number_reads[match(all$DC01_15.name_gen, DS01_15$name_gen)]
all$DS_2 <- DS02_15$number_reads[match(all$DC01_15.name_gen, DS02_15$name_gen)]
all$DS_4 <- DS04_15$number_reads[match(all$DC01_15.name_gen, DS04_15$name_gen)]
all$HC_1 <- HC01_15$number_reads[match(all$DC01_15.name_gen, HC01_15$name_gen)]
all$HC_2 <- HC02_15$number_reads[match(all$DC01_15.name_gen, HC02_15$name_gen)]
all$HC_3 <- HC03_15$number_reads[match(all$DC01_15.name_gen, HC03_15$name_gen)]
all$HC_4 <- HC04_15$number_reads[match(all$DC01_15.name_gen, HC04_15$name_gen)]
all$HC_5 <- HC05_15$number_reads[match(all$DC01_15.name_gen, HC05_15$name_gen)]
all$HS_1 <- HS01_15$number_reads[match(all$DC01_15.name_gen, HS01_15$name_gen)]
all$HS_2 <- HS02_15$number_reads[match(all$DC01_15.name_gen, HS02_15$name_gen)]
all$HS_5 <- HS05_15$number_reads[match(all$DC01_15.name_gen, HS05_15$name_gen)]
all$HC17 <- HC01_17$number_reads[match(all$DC01_15.name_gen, HC01_17$name_gen)]
all$DC47 <- DC04_17$number_reads[match(all$DC01_15.name_gen, DC04_17$name_gen)]
head(all)
colnames(all)[1]<- ""
colnames(all)[2]<- "DC_1"
head(all)
all<- as.data.frame(all, na.rm=TRUE)
all[is.na(all)]<- 0
#Remove no match
all<- all[-(1),]
sum(all$DC_1)
sum(all$DC_2)
sum(all$DC_3)
sum(all$DC_4)
sum(all$DC_5)
sum(all$DS_1)
sum(all$DS_2)
sum(all$DS_4)
sum(all$HC_1)
sum(all$HC_2)
sum(all$HC_3)
sum(all$HC_4)
sum(all$HC_5)
sum(all$HS_1)
sum(all$HS_2)
sum(all$HS_5)
# Count genes with 0 reads
nrow(all[all$DC_1 == 0,])
nrow(all[all$DC_2 == 0,])
nrow(all[all$DC_3 == 0,])
nrow(all[all$DC_4 == 0,])
nrow(all[all$DC_5 == 0,])
nrow(all[all$DS_1 == 0,])
nrow(all[all$DS_2 == 0,])
nrow(all[all$DS_4 == 0,])
nrow(all[all$HC_1 == 0,])
nrow(all[all$HC_2 == 0,])
nrow(all[all$HC_3 == 0,])
nrow(all[all$HC_4 == 0,])
nrow(all[all$HC_5 == 0,])
nrow(all[all$HS_1 == 0,])
nrow(all[all$HS_2 == 0,])
nrow(all[all$HS_5 == 0,])
# Export table to .txt format
write.table(all, file="allreadsgenes.txt", sep = "\t", eol = "\n", dec = ".",
row.names = TRUE, col.names = TRUE)
# Export table to .txt format
write.table(all, file="../../metadata/allreadsgenes.txt", sep = "\t", eol = "\n", dec = ".",
row.names = TRUE, col.names = TRUE)
install.packages("VennDiagram")
# Convert dataframe to data matrix
alldata<-read.delim("../../metadata/allreadsgenes.txt")
alldata <- as.data.frame(alldata)
x<-alldata
rownames(x)<-alldata[,1]
x<-x[ ,2:ncol(x)]
alldata<-as.matrix(x)
##################################################################################################################
##################################################################################################################
# Select data to compare
DCvsHC<- subset(alldata, select = -c(DS_1, DS_2, DS_4,
HS_1, HS_2, HS_5,
HC17, DC47))
alldata<- DCvsHC
############################################
# Add characteristics
############################################
tratamiento <- c("DC","DC","DC","DC","DC",
"HC","HC","HC","HC","HC")
label<- c("DC_1", "DC_2","DC_3","DC_4","DC_5",
"HC_1","HC_2","HC_3","HC_4","HC_5")
samples<-c("DC1", "DC2","DC3","DC4","DC5",
"HC1","HC2","HC3","HC4","HC5")
targets<- data.frame(tratamiento,label,samples)
rownames(targets)<- label
targets
### Filtering genes
table(rowSums(alldata)==0)
suma <- rowSums(alldata)
filtconteos <- alldata[suma != 0,]
dim(filtconteos)
##################################################################################################################
##################################################################################################################
# EdgeR
library(limma)
library(edgeR)
install.packages("limma")
install.packages("edgeR")
require(devtools)
BiocManager::install("limma")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager"
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
##################################################################################################################
##################################################################################################################
# EdgeR
library(limma)
BiocManager::install("edgeR")
library(edgeR)
## Clase DGEList
d <- DGEList(counts = filtconteos[,1:10], group = targets$tratamiento) ## Normalización
colnames(d) <- targets$label
## Normalizacion
d <- calcNormFactors(d)
plotMDS(d, main="plotMDS DCvsHC")
## Estimación de las dispersiones
d <- estimateCommonDisp(d,verbose=TRUE)
d <- estimateTagwiseDisp(d)
plotBCV(d, main="plotBCV DCvsHC")
## Pruebas
et <- exactTest(d,pair=c("HC","DC"))
top<- topTags(et, n= Inf)
hist(top$table$FDR, breaks = 100, main = "Hist FDR DCvsHC")
abline(v=0.05, col="red",lwd=3)
##################################################################################################################
##################################################################################################################
# DESeq2
library(DESeq2)
### Clase DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
### Pruebas
dds <- DESeq(dds)
res <- results(dds)
#edgeR
d$samples$norm.factors #edgeR
#DESeq2
sizeFactors(dds) #DESeq2
##################################################################################################################
##################################################################################################################
# DESeq2
library(DESeq2)
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
##################################################################################################################
##################################################################################################################
# DESeq2
library(DESeq2)
### Clase DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
##################################################################################################################
##################################################################################################################
# DESeq2
library(DESeq2)
### Clase DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
##################################################################################################################
##################################################################################################################
# DESeq2
library(Hmisc)
install.packages("Hmisc")
##################################################################################################################
##################################################################################################################
# DESeq2
library(Hmisc)
library(DESeq2)
##################################################################################################################
##################################################################################################################
# DESeq2
library(Hmisc)
install.packages("Hmisc")
##################################################################################################################
##################################################################################################################
# DESeq2
library(Hmisc)
##################################################################################################################
##################################################################################################################
# DESeq2
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install(c(
"recount", "GenomicRanges", "DESeq2", "ideal", "regionReport",
"clusterProfiler", "org.Hs.eg.db", "gplots", "derfinder",
"rtracklayer", "GenomicFeatures", "bumphunter", "derfinderPlot",
"sessioninfo"))
##################################################################################################################
##################################################################################################################
# DESeq2
library("DESeq2")
##################################################################################################################
##################################################################################################################
# DESeq2
library("DESeq2")
library(DESeq2)
### Clase DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
##################################################################################################################
##################################################################################################################
# DESeq2
library("DESeq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
browseVignettes("DESeq2")
nstall.packages("BiocManager")
Install.packages("BiocManager")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install(c(
"recount", "GenomicRanges", "DESeq2", "ideal", "regionReport",
"clusterProfiler", "org.Hs.eg.db", "gplots", "derfinder",
"rtracklayer", "GenomicFeatures", "bumphunter", "derfinderPlot",
"sessioninfo"))
clearPushBack()
clear
library(DESeq2)
install.packages("Hmisc")
library(DESeq2)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
### Clase DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
BiocManager::install("DESeq2")
##################################################################################################################
##################################################################################################################
# DESeq2
library("DESeq2")
### Clase DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
### Pruebas
dds <- DESeq(dds)
res <- results(dds)
View(res)
#edgeR
d$samples$norm.factors #edgeR
#DESeq2
sizeFactors(dds) #DESeq2
### Comparar valores de dispersion
# edgeR
# Primero calcula una dispersión común
d$common.dispersion
# Luego una dispersión gen a gen a partir de la común
head(d$tagwise.dispersion)
# DESeq2
# Primero calcula una estimación gen a gen
head(mcols(dds)$dispGeneEs)
# Luego através de un ajuste con la media de los conteos
# estima la dispersión
head(mcols(dds)$dispersion)
topTags(et, n= Inf)
# DESeq2
res[rownames(topTags(et, n= Inf)),]
# edgeR
de <- decideTestsDGE(et, p.value=0.1)
detags <- rownames(d)[as.logical(de)]
plotSmear(et, de.tags=detags, main="plotSmear de edgeR") > abline(h=0, col="red", lwd=3)
# DESeq2
plotMA(res, main="MA-plot DESeq2", ylim=c(-5,5))
### Ordenar los genes según el p-valor adjustado que han obtenido
# edgeR
topSig <- top[top$table$FDR < 0.1, ]
dim(topSig)
genesDEedgeR <- rownames(topSig)
genesDEedgeR
# DESeq2
# Ordenar por p-valores
resOrdered <- res[order(res$padj),]
