# Michoacan vs Todas
matcoor<-matcoor[-1,]
MiAl<-distGeo(matcoor, c(-100.6040, 19.8000), a=6378137, f=1/298.257223563)
# San Andres vs Todas
matcoor<-matcoor[-1,]
SA<-distGeo(matcoor, c(-100.6040, 19.8000), a=6378137, f=1/298.257223563)
# Nevado de Toluca RG vs Todas
matcoor<-matcoor[-1,]
NTRG<-distGeo(matcoor, c(-99.9600, 19.2600), a=6378137, f=1/298.257223563)
# Nevado de Toluca SB vs Todas
matcoor<-matcoor[-1,]
NTSB<-distGeo(matcoor, c(-99.9200, 19.2300), a=6378137, f=1/298.257223563)
# Volcan Atlitzin  vs Todas
matcoor<-matcoor[-1,]
VA<-distGeo(matcoor, c(-97.3500, 18.9670), a=6378137, f=1/298.257223563)
# Cerro Zamorano vs Todas
matcoor<-matcoor[-1,]
CZ<-distGeo(matcoor, c(-100.1820, 20.9290), a=6378137, f=1/298.257223563)
# Tlaxco  vs Todas
matcoor<-matcoor[-1,]
Tl<-distGeo(matcoor, c(-98.0830, 19.6830), a=6378137, f=1/298.257223563)
# Malinche  vs Todas
matcoor<-matcoor[-1,]
Ma<-distGeo(matcoor, c(-98.0433, 19.2372), a=6378137, f=1/298.257223563)
#Cofre de Perote vs Todas
#matcoor<-matcoor[-1,]
#CP<-distGeo(matcoor, c(-97.1500, 19.5170), a=6378137, f=1/298.257223563)
allvectordist<- c(SM,Aj, SRX, EC, NC, NT,Ix, CB, PG, VT, MiAl,
SA, NTRG, NTSB, VA, CZ, Tl, Ma)
## Make ".gds" file
vcf.fn <- "../data/89ind_maxmiss0.9_maf0.05.recode.vcf"
## Make ".gds" file
vcf.fn <- "../../data/88ind_maxmiss0.9_maf0.05.recode.vcf"
## Make ".gds" file
vcf.fn <- "../../data/without_Dup_loci/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.vcf"
snpgdsVCF2GDS(vcf.fn, "../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.recode.gds", method="biallelic.only", verbose = TRUE)
snpgdsSummary("../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.gds")
snpgdsSummary("../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.gds")
# Reyes Galindo VerÃ³nica
# 12 Febrero 2019
### This script calculated IBD
## Load packages
library(geosphere)
library(gdsfmt)
library(SNPRelate)
library(ggplot2)
#Load metadata
Coordenadas<-read.delim("../../metadata/Ar_IBD2.txt")
# Convert dataframe to matrix
matcoor<- as.data.frame(Coordenadas)
row.names(matcoor)
x<-matcoor
rownames(x)<-matcoor[,1]
x<-x[ ,2:ncol(x)]
x
rownames(x)
matcoor<-as.matrix(x)
## Calculate geographic distances
#Sierra Manantlan vs Todas
matcoor<-matcoor[-1,]
SM<-distGeo(matcoor, c(-103.9500, 19.4500), a=6378137, f=1/298.257223563)
# Aj vs Todas
matcoor<-matcoor[-1,]
Aj<-distGeo(matcoor, c(-99.2340, 19.2230), a=6378137, f=1/298.257223563)
# Santa Rosa Xochiac vs Todas
matcoor<-matcoor[-1,]
SRX<-distGeo(matcoor, c(-99.3010, 19.2850), a=6378137, f=1/298.257223563)
# El Chico vs Todas
matcoor<-matcoor[-1,]
EC<-distGeo(matcoor, c(-98.7000, 20.1500), a=6378137, f=1/298.257223563)
# Nevado de Colima vs Todas
matcoor<-matcoor[-1,]
NC<-distGeo(matcoor, c(-103.5990, 19.5840), a=6378137, f=1/298.257223563)
# Nevado de Toluca NT vs Todas
matcoor<-matcoor[-1,]
NT<-distGeo(matcoor, c(-99.8100, 19.1870), a=6378137, f=1/298.257223563)
# Ixtapalucan vs Todas
matcoor<-matcoor[-1,]
Ix<-distGeo(matcoor, c(-98.6100, 19.2590), a=6378137, f=1/298.257223563)
# Cerro Blanco vs Todas
matcoor<-matcoor[-1,]
CB<-distGeo(c(-100.2280, 19.5650),matcoor, a=6378137, f=1/298.257223563)
# Puerta Garnica vs Todas
matcoor<-matcoor[-1,]
PG<-distGeo(matcoor, c(-100.8220, 19.6700), a=6378137, f=1/298.257223563)
# Volcan Tancitaro   vs Todas
matcoor<-matcoor[-1,]
VT<-distGeo(matcoor, c(-102.3170, 19.3830), a=6378137, f=1/298.257223563)
# Michoacan vs Todas
matcoor<-matcoor[-1,]
MiAl<-distGeo(matcoor, c(-100.6040, 19.8000), a=6378137, f=1/298.257223563)
# San Andres vs Todas
matcoor<-matcoor[-1,]
SA<-distGeo(matcoor, c(-100.6040, 19.8000), a=6378137, f=1/298.257223563)
# Nevado de Toluca RG vs Todas
matcoor<-matcoor[-1,]
NTRG<-distGeo(matcoor, c(-99.9600, 19.2600), a=6378137, f=1/298.257223563)
# Nevado de Toluca SB vs Todas
matcoor<-matcoor[-1,]
NTSB<-distGeo(matcoor, c(-99.9200, 19.2300), a=6378137, f=1/298.257223563)
# Volcan Atlitzin  vs Todas
matcoor<-matcoor[-1,]
VA<-distGeo(matcoor, c(-97.3500, 18.9670), a=6378137, f=1/298.257223563)
# Cerro Zamorano vs Todas
matcoor<-matcoor[-1,]
CZ<-distGeo(matcoor, c(-100.1820, 20.9290), a=6378137, f=1/298.257223563)
# Tlaxco  vs Todas
matcoor<-matcoor[-1,]
Tl<-distGeo(matcoor, c(-98.0830, 19.6830), a=6378137, f=1/298.257223563)
# Malinche  vs Todas
matcoor<-matcoor[-1,]
Ma<-distGeo(matcoor, c(-98.0433, 19.2372), a=6378137, f=1/298.257223563)
#Cofre de Perote vs Todas
#matcoor<-matcoor[-1,]
#CP<-distGeo(matcoor, c(-97.1500, 19.5170), a=6378137, f=1/298.257223563)
allvectordist<- c(SM,Aj, SRX, EC, NC, NT,Ix, CB, PG, VT, MiAl,
SA, NTRG, NTSB, VA, CZ, Tl, Ma)
## Make ".gds" file
vcf.fn <- "../../data/without_Dup_loci/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.vcf"
snpgdsVCF2GDS(vcf.fn, "../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.recode.gds", method="biallelic.only", verbose = TRUE)
snpgdsSummary("../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.gds")
## Load packages
library(geosphere)
library(gdsfmt)
library(SNPRelate)
library(ggplot2)
#Load metadata
Coordenadas<-read.delim("../../metadata/Ar_IBD2.txt")
# Convert dataframe to matrix
matcoor<- as.data.frame(Coordenadas)
row.names(matcoor)
x<-matcoor
rownames(x)<-matcoor[,1]
x<-x[ ,2:ncol(x)]
x
rownames(x)
matcoor<-as.matrix(x)
#Sierra Manantlan vs Todas
matcoor<-matcoor[-1,]
SM<-distGeo(matcoor, c(-103.9500, 19.4500), a=6378137, f=1/298.257223563)
# Aj vs Todas
matcoor<-matcoor[-1,]
Aj<-distGeo(matcoor, c(-99.2340, 19.2230), a=6378137, f=1/298.257223563)
# Santa Rosa Xochiac vs Todas
matcoor<-matcoor[-1,]
SRX<-distGeo(matcoor, c(-99.3010, 19.2850), a=6378137, f=1/298.257223563)
# El Chico vs Todas
matcoor<-matcoor[-1,]
EC<-distGeo(matcoor, c(-98.7000, 20.1500), a=6378137, f=1/298.257223563)
# Nevado de Colima vs Todas
matcoor<-matcoor[-1,]
NC<-distGeo(matcoor, c(-103.5990, 19.5840), a=6378137, f=1/298.257223563)
# Nevado de Toluca NT vs Todas
matcoor<-matcoor[-1,]
NT<-distGeo(matcoor, c(-99.8100, 19.1870), a=6378137, f=1/298.257223563)
# Ixtapalucan vs Todas
matcoor<-matcoor[-1,]
Ix<-distGeo(matcoor, c(-98.6100, 19.2590), a=6378137, f=1/298.257223563)
# Cerro Blanco vs Todas
matcoor<-matcoor[-1,]
CB<-distGeo(c(-100.2280, 19.5650),matcoor, a=6378137, f=1/298.257223563)
# Puerta Garnica vs Todas
matcoor<-matcoor[-1,]
PG<-distGeo(matcoor, c(-100.8220, 19.6700), a=6378137, f=1/298.257223563)
# Volcan Tancitaro   vs Todas
matcoor<-matcoor[-1,]
VT<-distGeo(matcoor, c(-102.3170, 19.3830), a=6378137, f=1/298.257223563)
# Michoacan vs Todas
matcoor<-matcoor[-1,]
MiAl<-distGeo(matcoor, c(-100.6040, 19.8000), a=6378137, f=1/298.257223563)
# San Andres vs Todas
matcoor<-matcoor[-1,]
SA<-distGeo(matcoor, c(-100.6040, 19.8000), a=6378137, f=1/298.257223563)
# Nevado de Toluca RG vs Todas
matcoor<-matcoor[-1,]
NTRG<-distGeo(matcoor, c(-99.9600, 19.2600), a=6378137, f=1/298.257223563)
# Nevado de Toluca SB vs Todas
matcoor<-matcoor[-1,]
NTSB<-distGeo(matcoor, c(-99.9200, 19.2300), a=6378137, f=1/298.257223563)
# Volcan Atlitzin  vs Todas
matcoor<-matcoor[-1,]
VA<-distGeo(matcoor, c(-97.3500, 18.9670), a=6378137, f=1/298.257223563)
# Cerro Zamorano vs Todas
matcoor<-matcoor[-1,]
CZ<-distGeo(matcoor, c(-100.1820, 20.9290), a=6378137, f=1/298.257223563)
# Tlaxco  vs Todas
matcoor<-matcoor[-1,]
Tl<-distGeo(matcoor, c(-98.0830, 19.6830), a=6378137, f=1/298.257223563)
# Malinche  vs Todas
matcoor<-matcoor[-1,]
Ma<-distGeo(matcoor, c(-98.0433, 19.2372), a=6378137, f=1/298.257223563)
#Cofre de Perote vs Todas
#matcoor<-matcoor[-1,]
#CP<-distGeo(matcoor, c(-97.1500, 19.5170), a=6378137, f=1/298.257223563)
allvectordist<- c(SM,Aj, SRX, EC, NC, NT,Ix, CB, PG, VT, MiAl,
SA, NTRG, NTSB, VA, CZ, Tl, Ma)
## Make ".gds" file
vcf.fn <- "../../data/without_Dup_loci/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.vcf"
snpgdsVCF2GDS(vcf.fn, "../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.recode.gds", method="biallelic.only", verbose = TRUE)
snpgdsSummary("../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.recode.gds")
genofile<-snpgdsOpen("../../outputs/snp_withoutDupLoci_88s_maxmiss0.9_maf0.05.recode.gds")
# Load population data
pop_code <- read.delim("../../metadata/FST_VCFTools_Ar89.txt", header=FALSE)
# Load population data
pop_code <- read.delim("../../metadata/FST_VCFTools_Ar88.txt", header=FALSE)
# Get sample id
sample.id<- read.gdsn(index.gdsn(genofile, "sample.id"))
## Estimate FST
##############
##"SM", "Aj"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "Aj")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsAj<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsAj$Fst
##############
##"SM", "SRX"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "SRX")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsSRX<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsSRX$Fst
##############
##"SM", "EC"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "EC")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsEC<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsEC$Fst
##############
##"SM", "NC"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "NC")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsNC<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsNC$Fst
##############
##"SM", "NT"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "NT")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsNT<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsNT$Fst
##############
##"SM", "Ix"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "Ix")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsIx<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsIx$Fst
##############
##"SM", "CB"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "CB")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCB<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsCB$Fst
##############
##"SM", "PG"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "PG")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsPG<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsPG$Fst
##############
##"Aj", "VT"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "VT")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsVT<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsVT$Fst
##############
##"SM", "MiAl"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "MiAl")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsMiAl<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsMiAl$Fst
##############
##"SM", "SA"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "SA")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsSA<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsSA$Fst
##############
##"SM", "NTRG"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "NTRG")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsNTRG<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsNTRG$Fst
##############
##"SM", "NTSB"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "NTSB")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsNTSB<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsNTSB$Fst
##############
##"SM", "VA"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "VA")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsVA<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsVA$Fst
##############
##"SM", "CZ"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "CZ")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCZ<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsCZ$Fst
##############
##"SM", "Tl"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "Tl")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsTl<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsTl$Fst
##############
##"SM", "Ma"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "Ma")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsMa<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsMa$Fst
##############
##"SM", "CP"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "CP")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCP<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsCP$Fst
##############
##"Aj", "SRX"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("Aj", "SRX")
# Estimate FST
SMvsCP<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
##############
##"SM", "CP"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "CP")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCP<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
pop_code$V2
sample.id[flag]
##############
##"SM", "NTSB"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "NTSB")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
pop.sel
# Estimate FST
SMvsNTSB<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsNTSB$Fst
##############
##"SM", "VA"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "VA")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsVA<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsVA$Fst
##############
##"SM", "CZ"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "CZ")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCZ<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsCZ$Fst
##############
##"SM", "Tl"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "Tl")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsTl<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsTl$Fst
##############
##"SM", "Ma"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "Ma")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsMa<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsMa$Fst
##############
##"SM", "CP"##
##############
# Flag desired populations
flag <-  pop_code$V2 %in% c("SM", "CP")
samp.sel <- sample.id[flag]
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCP<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
SMvsCP$Fst
pop.sel
pop.sel
pop.sel <- pop_code$V2[flag]
pop.sel<-droplevels(pop.sel)
# Estimate FST
SMvsCP<-snpgdsFst(genofile, sample.id=samp.sel, population= as.factor(pop.sel), autosome.only = FALSE, remove.monosnp=TRUE, method="W&C84")
sample.id
View(pop_code)
View(SMvsAj)
View(SMvsCB)
View(SMvsCB)
View(SMvsCZ)
View(SMvsEC)
View(SMvsIx)
View(SMvsNTSB)
View(SMvsVT)
View(x)
View(Coordenadas)
View(genofile)
View(Coordenadas)
