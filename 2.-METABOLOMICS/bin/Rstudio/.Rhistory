frame = TRUE, frame.type = 'norm' )
dfSS<- as.matrix(df)
# PCA Conti
df <- metabolitosConti[c(8:15)]
dff<- df[c(1:4,6:8)]
autoplot(prcomp(dff), data = metabolitosConti, colour = 'PCA',
loadings = TRUE, size = 3, loadings.colour = 'black',
loadings.label = TRUE, loadings.label.size = 4, loadings.label.colour = 'black',
frame = TRUE, frame.type = 'norm' )
library(klaR)
# PCA SS
df <- metabolitosSS[c(8:15)]
dff<- df[c(1:4,6:8)]
autoplot(prcomp(dff), data = metabolitosSS, colour = 'PCA',
loadings = TRUE, size = 3, loadings.colour = 'black',
loadings.label = TRUE, loadings.label.size = 4, loadings.label.colour = 'black',
frame = TRUE, frame.type = 'norm' )
dfSS<- as.matrix(df)
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
attach(metabolites)
str(metabolites)
# Load data
#Dar nombre a la base de datos y adjuntarla
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
metabolites$PCA<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
attach(metabolites)
str(metabolites)
library(ggfortify)
library(corrplot)
library(lfda)
library("mice")
library("factoextra")
# Load libraries
library (ggplot2)
library(ggfortify)
library(corrplot)
library(lfda)
library("mice")
library("factoextra")
# Load data
#Dar nombre a la base de datos y adjuntarla
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
metabolites$PCA<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
attach(metabolites)
str(metabolites)
#Para generar matriz de correlaciones de Pearson
matrizcor<-cor(metabolites, method=c("pearson"))
# Load data
#Dar nombre a la base de datos y adjuntarla
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
metabolites$PCA<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
metabolitesSS<-metabolites[1:20,8:15]
attach(metabolitesSS)
str(metabolitesSS)
metabolitesConti<-metabolites[21:40,8:15]
attach(metabolitesConti)
str(metabolitesConti)
#Para generar matriz de correlaciones de Pearson
matrizcorSS<-cor(metabolitesSS, method=c("pearson"))
matrizcovSS<-cov(metabolitesSS)
matrizcorConti<-cor(metabolitesConti, method=c("pearson"))
matrizcovConti<-cov(metabolitesConti)
#C?lculo de componentes principales usando matriz R
CP_SS<-princomp(metabolitesSS, cor=T)
summary(CP_SS)
eigen(matrizcorSS)
CP_SS$loadings
vector_sdevs_SS<-as.vector(CP_SS$sdev)
vector_sdevs_SS
lambdas_SS<-vector_sdevs_SS*vector_sdevs_SS
lambdas_SS
TrazaLAMBDA_SS<-sum(lambdas_SS)
TrazaLAMBDA_SS
screeplot(CP_SS, main="Gr?fica de codo")
abline(h=1,col=4)
CP_Conti<-princomp(metabolitesConti, cor=T)
summary(CP_Conti)
eigen(matrizcor_Conti)
CP_Conti$loadings
summary(CP_Conti)
eigen(matrizcorConti)
CP_Conti$loadings
vector_sdevs_Conti<-as.vector(CP_Conti$sdev)
vector_sdevs_Conti
lambdas_Conti<-vector_sdevs_Conti*vector_sdevs_Conti
lambdas_Conti
TrazaLAMBDA_Conti<-sum(lambdas_Conti)
TrazaLAMBDA_Conti
screeplot(CP_Conti, main="Gr?fica de codo")
abline(h=1,col=4)
#Biplot CP1 vs CP2
biplot(CP_SS, choices= c(1,2),cex=c(0.6,0.5), scale = 0, main="Biplot para componentes 1 y 2 con scale=0")
abline(h=0, v=0, col = "lightgray", lty = 3)
abline(h=0.2, v=0.2, col = "lightgray", lty = 3)
abline(h=-0.2,  v=-0.2, col = "lightgray", lty = 3)
abline(h=0.4, v=0.4, col = "lightgray", lty = 3)
abline(h=-0.4, v=-0.4, col = "lightgray", lty = 3)
PC2<-prcomp(CP_SS,scale=TRUE)
CP_SS
PC2<-prcomp(metabolites_SS,scale=TRUE)
PC2<-prcomp(metabolitesSS,scale=TRUE)
fviz_eig(CP)
PC2<-prcomp(metabolitesSS,scale=TRUE)
fviz_eig(CP_SS)
fviz_pca_ind(CP_SS, col.ind="cos2", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_var(CP_SS,col.var="contrib", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_biplot(CP_SS,col.var="#2E9FDF", col.ind="#696969")
fviz_pca_biplot(CP_SS,col.var="#2E9FDF", col.ind="#696969")
df <- metabolitosSS
df <- metabolitesSS
df <- metabolitesConti
df <- metabolitesSS
View(metabolitesSS)
autoplot(prcomp(df))
df <- metabolitesConti
df <- metabolitesConti
autoplot(prcomp(df))
autoplot(prcomp(df), data = metabolites, colour = 'PCA', label = TRUE, label.size = 10)
autoplot(prcomp(df), data = metabolites, colour = 'PCA', shape = FALSE, label.size = 3)
autoplot(prcomp(df), data = metabolites, colour = 'PCA', loadings = TRUE)
autoplot(prcomp(df), data = metabolites, colour = 'PCA',
loadings = TRUE, loadings.colour = 'purple',
loadings.label = TRUE, loadings.label.size = 3,
frame = TRUE, frame.type = 'norm')
df2<- as.matrix(df)
M <- cor(df2)
corrplot(M, method = "circle")
corrplot(M, method = "number") # Display the correlation coefficient
p.mat <- cor.mtest(df2)$p
head(p.mat[, 1:8])
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(M, method = "color", col = col(200),
type = "upper", order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt = 90, # Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
df3<-scale(df2)
autoplot(prcomp(df3), data = metabolites, colour = 'PCA',
loadings = TRUE, loadings.colour = 'purple',
loadings.label = TRUE, loadings.label.size = 3,
frame = TRUE, frame.type = 'norm')
df <- metabolites[c(8:15)]
dff<- df[c(1:4,6:8)]
autoplot(prcomp(dff), data = metabolites, colour = 'PCA',
loadings = TRUE, size = 3, loadings.colour = 'black',
loadings.label = TRUE, loadings.label.size = 4, loadings.label.colour = 'black',
frame = TRUE, frame.type = 'norm' )
# PCA SS
df <- metabolitosSS[c(8:15)]
dff<- df[c(1:4,6:8)]
autoplot(prcomp(dff), data = metabolitosSS, colour = 'PCA',
loadings = TRUE, size = 3, loadings.colour = 'black',
loadings.label = TRUE, loadings.label.size = 4, loadings.label.colour = 'black',
frame = TRUE, frame.type = 'norm' )
dfSS<- as.matrix(df)
# Load libraries
library (ggplot2)
library(ggfortify)
library(corrplot)
library(lfda)
library("mice")
library("factoextra")
# Load data
#Dar nombre a la base de datos y adjuntarla
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
metabolites$PCA<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
metabolitesSS<-metabolites[1:20,8:15]
attach(metabolitesSS)
str(metabolitesSS)
metabolitesConti<-metabolites[21:40,8:15]
attach(metabolitesConti)
str(metabolitesConti)
#Exportar Data frame
exp_table<-metabolites[,c(1,8:15)]
write.csv(exp_table, file="../../metadata/exp_table.csv")
write.table(exp_table, file="../../metadata/exp_table.txt")
#Para generar matriz de correlaciones de Pearson
matrizcorSS<-cor(metabolitesSS, method=c("pearson"))
matrizcovSS<-cov(metabolitesSS)
matrizcorConti<-cor(metabolitesConti, method=c("pearson"))
matrizcovConti<-cov(metabolitesConti)
#C?lculo de componentes principales usando matriz R
CP_SS<-princomp(metabolitesSS, cor=T)
summary(CP_SS)
eigen(matrizcorSS)
CP_SS$loadings
vector_sdevs_SS<-as.vector(CP_SS$sdev)
vector_sdevs_SS
lambdas_SS<-vector_sdevs_SS*vector_sdevs_SS
lambdas_SS
TrazaLAMBDA_SS<-sum(lambdas_SS)
TrazaLAMBDA_SS
screeplot(CP_SS, main="Gr?fica de codo")
abline(h=1,col=4)
CP_Conti<-princomp(metabolitesConti, cor=T)
summary(CP_Conti)
eigen(matrizcorConti)
CP_Conti$loadings
vector_sdevs_Conti<-as.vector(CP_Conti$sdev)
vector_sdevs_Conti
lambdas_Conti<-vector_sdevs_Conti*vector_sdevs_Conti
lambdas_Conti
TrazaLAMBDA_Conti<-sum(lambdas_Conti)
TrazaLAMBDA_Conti
screeplot(CP_Conti, main="Gr?fica de codo")
abline(h=1,col=4)
#Biplot CP1 vs CP2
biplot(CP_SS, choices= c(1,2),cex=c(0.6,0.5), scale = 0, main="Biplot para componentes 1 y 2 con scale=0")
abline(h=0, v=0, col = "lightgray", lty = 3)
abline(h=0.2, v=0.2, col = "lightgray", lty = 3)
abline(h=-0.2,  v=-0.2, col = "lightgray", lty = 3)
abline(h=0.4, v=0.4, col = "lightgray", lty = 3)
abline(h=-0.4, v=-0.4, col = "lightgray", lty = 3)
PC2<-prcomp(metabolitesSS,scale=TRUE)
fviz_eig(CP_SS)
fviz_pca_ind(CP_SS, col.ind="cos2", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_var(CP_SS,col.var="contrib", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_biplot(CP_SS,col.var="#2E9FDF", col.ind="#696969")
fviz_pca_biplot(CP_SS,col.var="#2E9FDF", col.ind="#696969")
biplot(CP_Conti, choices= c(1,2),cex=c(0.6,0.5), scale = 0, main="Biplot para componentes 1 y 2 con scale=0")
abline(h=0, v=0, col = "lightgray", lty = 3)
abline(h=0.2, v=0.2, col = "lightgray", lty = 3)
abline(h=-0.2,  v=-0.2, col = "lightgray", lty = 3)
abline(h=0.4, v=0.4, col = "lightgray", lty = 3)
abline(h=-0.4, v=-0.4, col = "lightgray", lty = 3)
PC2<-prcomp(metabolitesConti,scale=TRUE)
PC2<-prcomp(metabolitesConti,scale=TRUE)
fviz_eig(CP_Conti)
fviz_pca_ind(CP_Conti, col.ind="cos2", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_var(CP_Conti,col.var="contrib", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_biplot(CP_Conti,col.var="#2E9FDF", col.ind="#696969")
fviz_pca_biplot(CP_Conti,col.var="#2E9FDF", col.ind="#696969")
View(metabolitesConti)
colnames()
colnames(metabolites)
rownames(metabolites)
# Load data
#Dar nombre a la base de datos y adjuntarla
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
metabolites$PCA<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
rownames(metabolites)<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
metabolitesSS<-metabolites[1:20,8:15]
# Load data
#Dar nombre a la base de datos y adjuntarla
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
metabolites$PCA<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
rownames(metabolites)<-c(rep("SS15",5), rep("SS16",5),
rep("SD15",5),rep("SD16",5),
rep("CS15",5),rep("CS16",5),
rep("CD15",5),rep("CD16",5))
rownames(metabolites)<-c("SS15_1", "SS15_2", "SS15_3", "SS15_4", "SS15_5",
"SS16_1", "SS16_2", "SS16_3", "SS16_4", "SS16_5",
"SD15_1", "SD15_2", "SD15_3", "SD15_4", "SD15_5",
"SD16_1", "SD16_2", "SD16_3", "SD16_4", "SD16_5",
"CS15_1", "CS15_2", "CS15_3", "CS15_4", "CS15_5",
"CS16_1", "CS16_2", "CS16_3", "CS16_4", "CS16_5",
"CD15_1", "CD15_2", "CD15_3", "CD15_4", "CD15_5",
"CD16_1", "CD16_2", "CD16_3", "CD16_4" ,"CD16_5")
metabolitesSS<-metabolites[1:20,8:15]
attach(metabolitesSS)
str(metabolitesSS)
metabolitesConti<-metabolites[21:40,8:15]
attach(metabolitesConti)
str(metabolitesConti)
#Exportar Data frame
exp_table<-metabolites[,c(1,8:15)]
write.csv(exp_table, file="../../metadata/exp_table.csv")
write.table(exp_table, file="../../metadata/exp_table.txt")
#Para generar matriz de correlaciones de Pearson
matrizcorSS<-cor(metabolitesSS, method=c("pearson"))
matrizcovSS<-cov(metabolitesSS)
matrizcorConti<-cor(metabolitesConti, method=c("pearson"))
matrizcovConti<-cov(metabolitesConti)
#C?lculo de componentes principales usando matriz R
CP_SS<-princomp(metabolitesSS, cor=T)
summary(CP_SS)
eigen(matrizcorSS)
CP_SS$loadings
vector_sdevs_SS<-as.vector(CP_SS$sdev)
vector_sdevs_SS
lambdas_SS<-vector_sdevs_SS*vector_sdevs_SS
lambdas_SS
TrazaLAMBDA_SS<-sum(lambdas_SS)
TrazaLAMBDA_SS
screeplot(CP_SS, main="Gr?fica de codo")
abline(h=1,col=4)
CP_Conti<-princomp(metabolitesConti, cor=T)
summary(CP_Conti)
eigen(matrizcorConti)
CP_Conti$loadings
vector_sdevs_Conti<-as.vector(CP_Conti$sdev)
vector_sdevs_Conti
lambdas_Conti<-vector_sdevs_Conti*vector_sdevs_Conti
lambdas_Conti
TrazaLAMBDA_Conti<-sum(lambdas_Conti)
TrazaLAMBDA_Conti
screeplot(CP_Conti, main="Gr?fica de codo")
abline(h=1,col=4)
#Biplot CP1 vs CP2
biplot(CP_SS, choices= c(1,2),cex=c(0.6,0.5), scale = 0, main="Biplot para componentes 1 y 2 con scale=0")
abline(h=0, v=0, col = "lightgray", lty = 3)
abline(h=0.2, v=0.2, col = "lightgray", lty = 3)
abline(h=-0.2,  v=-0.2, col = "lightgray", lty = 3)
abline(h=0.4, v=0.4, col = "lightgray", lty = 3)
abline(h=-0.4, v=-0.4, col = "lightgray", lty = 3)
PC2<-prcomp(metabolitesSS,scale=TRUE)
fviz_eig(CP_SS)
fviz_pca_ind(CP_SS, col.ind="cos2", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_var(CP_SS,col.var="contrib", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_biplot(CP_SS,col.var="#2E9FDF", col.ind="#696969")
fviz_pca_biplot(CP_SS,col.var="#2E9FDF", col.ind="#696969")
biplot(CP_Conti, choices= c(1,2),cex=c(0.6,0.5), scale = 0, main="Biplot para componentes 1 y 2 con scale=0")
abline(h=0, v=0, col = "lightgray", lty = 3)
abline(h=0.2, v=0.2, col = "lightgray", lty = 3)
abline(h=-0.2,  v=-0.2, col = "lightgray", lty = 3)
abline(h=0.4, v=0.4, col = "lightgray", lty = 3)
abline(h=-0.4, v=-0.4, col = "lightgray", lty = 3)
PC2<-prcomp(metabolitesConti,scale=TRUE)
fviz_eig(CP_Conti)
fviz_pca_ind(CP_Conti, col.ind="cos2", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_var(CP_Conti,col.var="contrib", gradient.cols=c(#00AFBB","#E7B800","#FC4E07"),repel=TRUE)
)
)
fviz_pca_biplot(CP_Conti,col.var="#2E9FDF", col.ind="#696969")
fviz_pca_biplot(CP_Conti,col.var="#2E9FDF", col.ind="#696969")
iris[-5]
iris
View(metabolitesConti)
View(metabolites)
View(metabolitesConti)
View(metabolites)
View(metabolites)
metabolites_2_SS<-metabolites[1:20,8:16]
View(metabolites_2_SS)
iris[, 5]
model <- lfda(metabolites_2_SS[, -16], metabolites_2_SS[, 16], 4, metric="plain")
library(lfda)
metabolites_2_SS
iris
model <- lfda(metabolites_2_SS[-16], metabolites_2_SS[, 16], 4, metric="plain")
(iris[-5]
iris[-5]
metabolites_2_SS[-16]
model <- lfda(metabolites_2_SS[-9], metabolites_2_SS[, 9], 4, metric="plain")
metabolitesSS<-metabolites[1:20,8:15]
metabolitesConti<-metabolites[21:40,8:15]
metabolites_2_SS<-metabolites[1:20,8:16]
metabolites_2_Conti<-metabolites[21:40,8:16]
model <- lfda(metabolites_2_SS[-9], metabolites_2_SS[, 9], 4, metric="plain")
library(lfda)
autoplot(model, data = metabolites_2_SS, frame = TRUE, frame.colour = 'PCA')
View(metabolites_2_SS)
X <- metabolites_2_SS[,-9]
y <- metabolites_2_SS[, 9]
X$xnew <- (metabolites_2_SS[, 9]=="SS15")
result <- lfda(X, y, r=3, metric="plain")
View(matrizcorSS)
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
beta.pinene<- metabolites[,c(3:5,8)]
L.alfa.bornyl.acetate<- metabolites[,c(3:5,9)]
beta.Caryophyllene.oxide<- metabolites[,c(3:5,10)]
alfa.Caryophyllene<- metabolites[,c(3:5,11)]
beta.Cubebene<- metabolites[,c(3:5,12)]
alfa.Cubenene<- metabolites[,c(3:5,13)]
delta.Cadinene<- metabolites[,c(3:5,14)]
alfa.Muurolene<- metabolites[,c(3:5,15)]
plot.design(beta.pinene ~ ., data = beta.pinene)
plot.design(alfa.Caryophyllene ~ ., data = alfa.Caryophyllene)
plot.design(delta.Cadinene ~ ., data =delta.Cadinene)
with(beta.pinene, {
interaction.plot(Temporada, Condicion, beta.pinene)
interaction.plot(Temporada, A.exposicion, beta.pinene)
interaction.plot(A.exposicion, Condicion, beta.pinene)
}
)
par(op)
fm <- aov(beta.pinene ~ Temporada * Condicion * A.exposicion, data = beta.pinene)
# fm <- aov(Bornil_Acetato ~ Temporada + Condicion + Tiempo_exposicion + Temporada:Condicion + Temporada:Tiempo_exposicion + Condicion:Tiempo_exposicion
#          + Temporada:Condicion:Tiempo_exposicion, data = Bornil_Acetato)
summary(fm)
# Datos completos
fmbeta.pinene <- aov(beta.pinene ~ Temporada * Condicion * A.exposicion, data = beta.pinene)
fmL.alfa.bornyl.acetate <- aov(L.alfa.bornyl.acetate ~ Temporada * Condicion * A.exposicion, data = L.alfa.bornyl.acetate)
fmbeta.Caryophyllene.oxide<- aov(beta.Caryophyllene.oxide ~ Temporada * Condicion * A.exposicion, data = beta.Caryophyllene.oxide)
fmalfa.Caryophyllene <- aov(alfa.Caryophyllene ~ Temporada * Condicion * A.exposicion, data = alfa.Caryophyllene)
fmbeta.Cubebene<- aov(beta.Cubebene ~ Temporada * Condicion * A.exposicion, data = beta.Cubebene)
fmalfa.Cubenene <- aov(alfa.Cubenene ~ Temporada * Condicion * A.exposicion, data = alfa.Cubenene)
fmdelta.Cadinene<- aov(delta.Cadinene ~ Temporada * Condicion * A.exposicion, data = delta.Cadinene)
fmalfa.Muurolene <- aov(alfa.Muurolene ~ Temporada * Condicion * A.exposicion, data = alfa.Muurolene)
summary(fmbeta.pinene)
summary(fmL.alfa.bornyl.acetate)
summary(fmbeta.Caryophyllene.oxide)
summary(fmbeta.pinene)
summary(fmL.alfa.bornyl.acetate)
summary(fmbeta.Caryophyllene.oxide)
summary(fmalfa.Caryophyllene)
summary(fmbeta.Cubebene)
summary(fmalfa.Cubenene)
summary(fmdelta.Cadinene)
summary(fmalfa.Muurolene)
beta.pinene<- summary(fmbeta.pinene)
L.alfa.bornyl.acetate<- summary(fmL.alfa.bornyl.acetate)
beta.Caryophyllene.oxide<- summary(fmbeta.Caryophyllene.oxide)
beta.pinene
beta.pinene
beta.pinene
L.alfa.bornyl.acetate<- summary(fmL.alfa.bornyl.acetate)
beta.Caryophyllene.oxide<- summary(fmbeta.Caryophyllene.oxide)
alfa.Caryophyllene<- summary(fmalfa.Caryophyllene)
beta.Cubebene<- summary(fmbeta.Cubebene)
alfa.Cubenene<- summary(fmalfa.Cubenene)
delta.Cadinene<- summary(fmdelta.Cadinene)
alfa.Muurolene<- summary(fmalfa.Muurolene)
class(beta.pinene)
write.table(beta.pinene, "../../metadata/beta.pinene.txt", sep="\t", row.names=FALSE)
beta.pinene[4]
beta.pinene[2]
data.frame(unclass(summary(beta.pinene)), check.names = FALSE, stringsAsFactors = FALSE)
str(.Last.value)
do.call(cbind, lapply(mydf, summary))
do.call(cbind, lapply(beta.pinene, summary))
beta.pinene
metabolites<-read.delim("../../metadata/calculate_relative_abs.txt")
beta.pinene<- metabolites[,c(3:5,8)]
L.alfa.bornyl.acetate<- metabolites[,c(3:5,9)]
beta.Caryophyllene.oxide<- metabolites[,c(3:5,10)]
alfa.Caryophyllene<- metabolites[,c(3:5,11)]
beta.Cubebene<- metabolites[,c(3:5,12)]
alfa.Cubenene<- metabolites[,c(3:5,13)]
delta.Cadinene<- metabolites[,c(3:5,14)]
alfa.Muurolene<- metabolites[,c(3:5,15)]
plot.design(beta.pinene ~ ., data = beta.pinene)
plot.design(alfa.Caryophyllene ~ ., data = alfa.Caryophyllene)
plot.design(delta.Cadinene ~ ., data =delta.Cadinene)
with(beta.pinene, {
interaction.plot(Temporada, Condicion, beta.pinene)
interaction.plot(Temporada, A.exposicion, beta.pinene)
interaction.plot(A.exposicion, Condicion, beta.pinene)
}
)
par(op)
fm <- aov(beta.pinene ~ Temporada * Condicion * A.exposicion, data = beta.pinene)
# fm <- aov(Bornil_Acetato ~ Temporada + Condicion + Tiempo_exposicion + Temporada:Condicion + Temporada:Tiempo_exposicion + Condicion:Tiempo_exposicion
#          + Temporada:Condicion:Tiempo_exposicion, data = Bornil_Acetato)
summary(fm)
# Datos completos
fmbeta.pinene <- aov(beta.pinene ~ Temporada * Condicion * A.exposicion, data = beta.pinene)
fmL.alfa.bornyl.acetate <- aov(L.alfa.bornyl.acetate ~ Temporada * Condicion * A.exposicion, data = L.alfa.bornyl.acetate)
fmbeta.Caryophyllene.oxide<- aov(beta.Caryophyllene.oxide ~ Temporada * Condicion * A.exposicion, data = beta.Caryophyllene.oxide)
fmalfa.Caryophyllene <- aov(alfa.Caryophyllene ~ Temporada * Condicion * A.exposicion, data = alfa.Caryophyllene)
fmbeta.Cubebene<- aov(beta.Cubebene ~ Temporada * Condicion * A.exposicion, data = beta.Cubebene)
fmalfa.Cubenene <- aov(alfa.Cubenene ~ Temporada * Condicion * A.exposicion, data = alfa.Cubenene)
fmdelta.Cadinene<- aov(delta.Cadinene ~ Temporada * Condicion * A.exposicion, data = delta.Cadinene)
fmalfa.Muurolene <- aov(alfa.Muurolene ~ Temporada * Condicion * A.exposicion, data = alfa.Muurolene)
summary(fmbeta.pinene)
summary(fmL.alfa.bornyl.acetate)
summary(fmbeta.Caryophyllene.oxide)
summary(fmalfa.Caryophyllene)
summary(fmbeta.Cubebene)
summary(fmalfa.Cubenene)
summary(fmdelta.Cadinene)
summary(fmalfa.Muurolene)
beta.pinene<- summary(fmbeta.pinene)
L.alfa.bornyl.acetate<- summary(fmL.alfa.bornyl.acetate)
beta.Caryophyllene.oxide<- summary(fmbeta.Caryophyllene.oxide)
alfa.Caryophyllene<- summary(fmalfa.Caryophyllene)
beta.Cubebene<- summary(fmbeta.Cubebene)
alfa.Cubenene<- summary(fmalfa.Cubenene)
delta.Cadinene<- summary(fmdelta.Cadinene)
alfa.Muurolene<- summary(fmalfa.Muurolene)
